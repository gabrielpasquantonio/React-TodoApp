{"version":3,"sources":["header.js","firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","Logo","a","NavMenu","div","Login","Header","href","src","alt","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","value","onChange","event","target","Button","onClick","collection","doc","id","set","merge","ListItemText","primary","variant","color","button","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8047f6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport styled from \"styled-components\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <Nav>\r\n      <Logo>\r\n        <span>Gabriel Pasquantonio Workspace</span>\r\n      </Logo>\r\n\r\n      <NavMenu>\r\n       \r\n        <a href=\"https://github.com/gabrielpasquantonio\">\r\n        <GitHubIcon  />\r\n          <span>GIT HUB</span>\r\n        </a>\r\n        <a\r\n      href=\"https://www.linkedin.com/in/gabrielpasquantonio/\"\r\n      \r\n    >\r\n      <LinkedInIcon />\r\n      <span>LINKED IN</span>\r\n      </a>\r\n        \r\n      </NavMenu>\r\n      <Login> <img\r\n      src=\"https://avatars.githubusercontent.com/u/64622616?s=400&u=18457496f8a4ebbec20cfbd949a2feb367e3af5e&v=4\"\r\n      alt=\"Gabriel Pasquantonio\"\r\n      \r\n    /></Login>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nconst Nav = styled.nav`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 70px;\r\n  background-color: #090b13;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  \r\n  letter-spacing: 3px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst Logo = styled.a`\r\n  padding: 20px;\r\n  \r\n  margin-top: 4px;\r\n  max-height: 70px;\r\n  font-size: 10;\r\n  \r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  height: 100%;\r\n  justify-content: flex-end;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  position: relative;\r\n  \r\n  margin-left: auto;\r\n  a {\r\n    fontSize:large;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 12px;\r\n    img {\r\n      height: 20px;\r\n      min-width: 20px;\r\n      width: 20px;\r\n      z-index: auto;\r\n    }\r\n    span {\r\n      color: rgb(249, 249, 249);\r\n      font-size: 13px;\r\n      letter-spacing: 1.42px;\r\n      line-height: 1.08;\r\n      \r\n      white-space: nowrap;\r\n      position: relative;\r\n      &:before {\r\n        background-color: rgb(249, 249, 249);\r\n        border-radius: 0px 0px 4px 4px;\r\n        bottom: -6px;\r\n        content: \"\";\r\n        height: 2px;\r\n        left: 0px;\r\n        opacity: 0;\r\n        \r\n        right: 0px;\r\n        transform-origin: left center;\r\n        transform: scaleX(0);\r\n        transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n        visibility: hidden;\r\n        width: auto;\r\n      }\r\n    }\r\n    &:hover {\r\n      span:before {\r\n        transform: scaleX(1);\r\n        visibility: visible;\r\n        opacity: 1 !important;\r\n      }\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\nconst Login = styled.a`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n \r\n  text-transform: uppercase;\r\n  letter-spacing: 1.5px;\r\n  border: 1px solid #f9f9f9;\r\n  border-radius: 4px;\r\n  transition: all 0.2s ease 0s;\r\n  &:hover {\r\n    background-color: #f9f9f9;\r\n    color: #000;\r\n    border-color: transparent;\r\n  }\r\n  img {\r\n    display: flex;\r\n  max-height: 70px;\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header;\r\n\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDJYYcsU8i7bICedHNt7oG1FVL4X9LfhH0\",\r\n    authDomain: \"todoapp-5aa6c.firebaseapp.com\",\r\n    projectId: \"todoapp-5aa6c\",\r\n    storageBucket: \"todoapp-5aa6c.appspot.com\",\r\n    messagingSenderId: \"142534822149\",\r\n    appId: \"1:142534822149:web:9ea52806d9f5a933facf6c\",\r\n    measurementId: \"G-77K34P53NK\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db","import {\r\n  ListItemText,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Modal\r\n} from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport React, {useState} from \"react\";\r\nimport db from \"./firebase\";\r\nimport \"./Todo.css\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({ //documentation from material ui\r\n  paper:{\r\n    position:'absolute',\r\n    width:400,\r\n    backgroundColor:theme.palette.background.paper,\r\n    border:'2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2,4,3),\r\n  },\r\n}))\r\n\r\nfunction Todo(props) {\r\nconst classes = useStyles();\r\nconst[open,setOpen] = useState(false);\r\nconst[input, setInput] = useState('')\r\n\r\n\r\nconst handleOpen = () =>{\r\n  setOpen(true)\r\n};\r\n\r\nconst updateTodo = () =>{\r\n//update the todo with the new input text.\r\ndb.collection('todos').doc(props.todo.id).set({\r\ntodo:input\r\n},{merge:true})//in firebase to update you have to pass a second paramether named merge:true\r\n  setOpen(false)\r\n}\r\n  return (\r\n  <>\r\n  <Modal open={open}\r\n  onClose={e => setOpen(false)}>\r\n    \r\n    <div className ={classes.paper}>\r\n      <h1>New plans?</h1>\r\n      <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)}/>\r\n      <Button onClick={updateTodo} > Update</Button>\r\n    </div>\r\n  </Modal>\r\n    <ul className=\"ulList\" >\r\n      <li>\r\n       \r\n        <ListItemText primary={props.todo.todo}  />\r\n      </li>\r\n      <container className=\"botoes\">\r\n      <Button onClick={(e) => setOpen(true)}>Edit</Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n       className=\"delete\"\r\n        onClick={(event) => {\r\n          db.collection(\"todos\").doc(props.todo.id).delete();\r\n        }}\r\n      >Del\r\n      </Button>\r\n      </container>\r\n    </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./header\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport Todo from \"./Todo\";\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  //when the apps load, we need to listen to the database and fetch new todos as they get added/removed\n\n  useEffect(() => {\n    //this code here... fires when the app.js loads\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setTodos(\n          snapshot.docs.map((doc) => ({ id: doc.id, todo: doc.data().todo }))\n        );\n      });\n  }, []);\n\n  const addTodo = (event) => {\n    //this will fire off when we click the button\n    event.preventDefault(); // will stop refresh\n\n    db.collection(\"todos\").add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setInput(\"\"); // clear up input after clicking add todo button\n  };\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"todolist\">\n        <div className=\"heading\">\n          <h1 className=\"title\">React JS To-Do List</h1>\n        </div>\n<form>\n        <FormControl>\n          <InputLabel>\n            <b>Write a Todo</b>\n          </InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n\n          <Button\n            className=\"buttonn\"\n            disabled={!input}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={addTodo}\n          >\n            Add\n          </Button>\n        </FormControl>\n        </form>\n        <div className=\"items\">\n          \n            {todos.map((todo) => (\n              <Todo todo={todo} />\n            ))}\n            \n        \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}